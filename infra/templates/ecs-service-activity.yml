Parameters:
  EcsClusterName:
    Type: String
    Description: ECS Cluster Name
  ActivityName:
    Type: String
    Description: Name of the activity in the service StepFunctions
  DockerImage:
    Type: String
    Description: Docker image to pull

  CloudWatchLogsRetentionInDays:
    Description: The number of days log events are kept in CloudWatch Logs
    Type: Number
    Default: 1
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]


Resources:
  Activity:
    Type: "AWS::StepFunctions::Activity"
    Properties:
      Name: !Ref ActivityName

  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '${EcsClusterName}-activity'
      RetentionInDays: !Ref CloudWatchLogsRetentionInDays

  Service:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref EcsClusterName
      DesiredCount: 1
      TaskDefinition: !Ref Task

  Task:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: jpinsolle-activity-hello
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
      - Name: jpinsolle-activity-hello
        Image: !Ref DockerImage
        Memory: 50
        Environment:
          - Name: ACTIVITY_ARN
            Value: !Ref Activity
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: !Ref AWS::Region
            awslogs-group: !Ref LogGroup
            awslogs-stream-prefix: jpinsolle-activity-hello

  TaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "s3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - states:SendTaskSuccess
                  - states:SendTaskFailure
                  - states:GetActivityTask
                Resource: "*"



Outputs:
  TaskRole:
    Description: Role to get activities
    Value: !GetAtt TaskRole.Arn
  Task:
    Value: !Ref Task
  LogGroup:
    Value: !Ref LogGroup
  Activity:
    Value: !Ref Activity
